swagger: "2.0"
info:
  contact:
    name: Kari Kangas (karijkangas@gmail.com)
  description: ""
  license:
    name: MIT
  title: Gotagsavaruus REST API
  version: 0.0.1
host: localhost.com:8000
basePath: /api
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
paths:
  /join/check:
    post:
      description: |
        Check account availability. Account is available if there is no existing user registered
        with a given email address.
      parameters:
        - description: Join check data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/JoinCheck"
      produces:
        - application/json
      responses:
        "200":
          description: Account available
          schema:
            $ref: "#/definitions/JoinCheck"
        "400":
          description: Invalid data
        "409":
          description: Account not available
  /join/:
    post:
      description: |
        Create a join request. Sends an email with a link to verify account. Join requests are
        purged from the database after 1 day.
      parameters:
        - description: Join data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/Join"
      produces:
        - application/json
      responses:
        "201":
          description: Join request accepted
        "400":
          description: Invalid data
        "409":
          description: Account not available
  /join/verify:
    post:
      description: |
        Verify pending join request. Creates a user account matching the pending join request
        data and removes the pending join request from the database. Given email and password
        must match the email and password in the pending join request data. Returns a session
        token.
      parameters:
        - description: Join verify data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/JoinVerify"
      produces:
        - application/json
      responses:
        "200":
          description: Join token data
          schema:
            $ref: "#/definitions/JoinToken"
        "400":
          description: Invalid data
        "401":
          description: Invalid credentials
        "404":
          description: Join request not found
  /signin/:
    post:
      description: |
        Signin with email and password.
      parameters:
        - description: Signin data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/Signin"
      produces:
        - application/json
      responses:
        "200":
          description: Token
          schema:
            $ref: "#/definitions/Token"
        "400":
          description: Invalid data
        "401":
          description: Invalid credentials
  /reset-password/:
    post:
      description: |
        Create a reset password request. Sends an email with a link to reset password. Reset password
        requests are purged from the database after 1 day.
      parameters:
        - description: Reset password data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/ResetPassword"
      produces:
        - application/json
      responses:
        "201":
          description: Reset password request accepted
        "400":
          description: Invalid data
        "404":
          description: Unknown email
  /reset-password/verify:
    post:
      description: |
        Resets password and removes the reset password request from the database. Given email
        must match the email in the pending reset password request data. Returns a session
        token.
      parameters:
        - description: Reset password verify data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/ResetPasswordVerify"
      produces:
        - application/json
      responses:
        "200":
          description: Token.
          schema:
            $ref: "#/definitions/Token"
        "401":
          description: Given email does not match the email in the request
        "404":
          description: Password reset request not found
        "410":
          description: User matching email not found
  /auth/account/:
    patch:
      description: |
        Modify account.
      parameters:
        - description: Modify account data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/ModifyAccount"
      produces:
        - application/json
      responses:
        "200":
          description: Account modified
        "400":
          description: Invalid data
        "401":
          description: Invalid token
    delete:
      description: |
        Delete account.
      parameters:
        - description: Delete account data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/DeleteAccount"
      produces:
        - application/json
      responses:
        "200":
          description: Account deleted
        "400":
          description: Invalid password
        "401":
          description: Invalid token
definitions:
  JoinCheck:
    properties:
      email:
        type: string
    required:
      - email
    type: object
  Join:
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
      lang:
        type: string
      extra:
        type: object
    required:
      - name
      - email
      - password
    type: object
  JoinVerify:
    properties:
      id:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - id
      - email
      - password
    type: object
  Signin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
    type: object
  JoinToken:
    properties:
      name:
        type: string
      email:
        type: string
      extra:
        type: string
      token:
        type: string
    type: object
  Token:
    properties:
      name:
        type: string
      email:
        type: string
      token:
        type: string
    type: object
  ResetPassword:
    properties:
      email:
        type: string
      lang:
        type: string
    required:
      - email
    type: object
  ResetPasswordVerify:
    properties:
      id:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - id
      - email
      - password
    type: object
  ModifyAccount:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  DeleteAccount:
    properties:
      password:
        type: string
    required:
      - password
    type: object
