swagger: "2.0"
info:
  contact:
    name: Kari Kangas (karijkangas@gmail.com)
  description: ""
  license:
    name: MIT
  title: Gotagsavaruus REST API
  version: 0.0.1
host: 127.0.0.1:8000
servers:
  - url: http://127.0.0.1:8000
basePath: /api
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: Token
tags:
  - name: public
    description: Public API
  - name: authorized
    description: Authorized API
  - name: debug
    description: Debug API
paths:
  /join/check:
    post:
      description: |
        Check account availability. An account is available if the email is not used by an existing user.
      parameters:
        - description: Join check input data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/INJoinCheck"
      produces:
        - application/json
      responses:
        "200":
          description: Account available
          schema:
            $ref: "#/definitions/OUTJoinCheck"
        "400":
          description: Invalid data
        "409":
          description: Account not available
      tags:
        - public
  /join/:
    post:
      description: |
        Create a join request. Sends an email with a link to verify account. Join requests are
        purged from the database after some time (1 day).
      parameters:
        - description: Join input data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/INJoin"
      produces:
        - application/json
      responses:
        "201":
          description: Join request accepted
        "400":
          description: Invalid data
        "409":
          description: Account not available
        "429":
          description: Too many requests
      tags:
        - public
  /join/activate:
    post:
      description: |
        Activate pending join request. Creates a user account matching the pending join request
        data and removes the pending join request from the database. Given email and password
        must match the email and password in the pending join request data. Returns a session
        token.
      parameters:
        - description: Join activate input data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/INJoinActivate"
      produces:
        - application/json
      responses:
        "200":
          description: Join activate output data
          schema:
            $ref: "#/definitions/OUTJoinActivate"
        "400":
          description: Invalid data
        "401":
          description: Invalid email/password
        "404":
          description: Join request not found
      tags:
        - public
  /signin/:
    post:
      description: |
        Signin with email and password.
      parameters:
        - description: Signin input data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/INSignin"
      produces:
        - application/json
      responses:
        "200":
          description: Signin output data
          schema:
            $ref: "#/definitions/OUTSignin"
        "400":
          description: Invalid data
        "401":
          description: Incorrect email/password
        "429":
          description: Too many sessions
      tags:
        - public
  /reset-password/:
    post:
      description: |
        Create a reset password request. Sends an email with a link to reset password. Reset
        password requests are purged from the database after some time (1 day).
      parameters:
        - description: Reset password input data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/INResetPassword"
      produces:
        - application/json
      responses:
        "201":
          description: Reset password request accepted
        "400":
          description: Invalid data
        "404":
          description: Unknown email
        "429":
          description: Too many requests
      tags:
        - public
  /reset-password/new:
    post:
      description: |
        Sets new password and removes the reset password request from the database. Given email
        must match the email in the pending reset password request data. Returns a session
        token.
      parameters:
        - description: New password input data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/INNewPassword"
      produces:
        - application/json
      responses:
        "200":
          description: New password output data
          schema:
            $ref: "#/definitions/OUTNewPassword"
        "400":
          description: Invalid data
        "401":
          description: Email does not match the email in the request
        "404":
          description: Password reset request not found
        "410":
          description: User with email not found
        "429":
          description: Too many sessions
      tags:
        - public
  /auth/session:
    post:
      description: |
        Renew session.
      security:
        - ApiKeyAuth: []
      produces:
        - application/json
      responses:
        "204":
          description: Session renewed
        "401":
          description: Invalid token
        "410":
          description: Failed, session expired?
      tags:
        - authorized
    delete:
      description: |
        Delete session.
      security:
        - ApiKeyAuth: []
      produces:
        - application/json
      responses:
        "204":
          description: Session deleted
        "401":
          description: Invalid token
      tags:
        - authorized
  /auth/account/:
    get:
      description: |
        Get account data.
      security:
        - ApiKeyAuth: []
      produces:
        - application/json
      responses:
        "200":
          description: Account output data
          schema:
            $ref: "#/definitions/OUTAccount"
        "401":
          description: Invalid token
        "410":
          description: Failed, use gone?
      tags:
        - authorized
    put:
      description: |
        Update account data.
      security:
        - ApiKeyAuth: []
      parameters:
        - description: Update account input data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/INAccount"
      produces:
        - application/json
      responses:
        "200":
          description: Account data updated
          schema:
            $ref: "#/definitions/OUTAccount"
        "400":
          description: Invalid data
        "401":
          description: Invalid token
        "410":
          description: Failed, use gone?
      tags:
        - authorized
    delete:
      description: |
        Delete account.
      security:
        - ApiKeyAuth: []
      parameters:
        - description: Delete account input data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/INDeleteAccount"
      produces:
        - application/json
      responses:
        "204":
          description: Account deleted
        "400":
          description: Invalid password
        "401":
          description: Invalid token
        "409":
          description: Incorrect password
        "410":
          description: Failed, use gone?
      tags:
        - authorized
  /auth/profile/:
    get:
      description: |
        Get profile data.
      security:
        - ApiKeyAuth: []
      produces:
        - application/json
      responses:
        "200":
          description: Profile output data
          schema:
            $ref: "#/definitions/OUTProfile"
        "401":
          description: Invalid token
        "410":
          description: Failed, use gone?
      tags:
        - authorized
    put:
      description: |
        Update profile data.
      security:
        - ApiKeyAuth: []
      parameters:
        - description: Update profile input data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/INProfile"
      produces:
        - application/json
      responses:
        "200":
          description: Profile data updated
          schema:
            $ref: "#/definitions/OUTProfile"
        "400":
          description: Invalid data
        "401":
          description: Invalid token
        "410":
          description: Failed, use gone?
      tags:
        - authorized
  /auth/password:
    post:
      description: |
        Update password.
      security:
        - ApiKeyAuth: []
      parameters:
        - description: Update password input data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/INPassword"
      produces:
        - application/json
      responses:
        "204":
          description: Password changed
        "400":
          description: Invalid data
        "401":
          description: Invalid token
        "409":
          description: Incorrect password
        "410":
          description: Failed, use gone?
      tags:
        - authorized
  /debug/reset:
    post:
      description: |
        DEBUG API: reset database
      produces:
        - application/json
      responses:
        "200":
          description: Database reset
      tags:
        - debug
  /debug/pending:
    get:
      description: |
        DEBUG API: get pending
      produces:
        - application/json
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Category
      responses:
        "200":
          description: Get pending output data
          schema:
            $ref: "#/definitions/OUTDebugGetPending"
      tags:
        - debug
definitions:
  INJoinCheck:
    type: object
    properties:
      email:
        type: string
    required:
      - email
  OUTJoinCheck:
    type: object
    properties:
      email:
        type: string
    required:
      - email
  INJoin:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
      lang:
        type: string
      extra:
        type: object
    required:
      - name
      - email
      - password
  INJoinActivate:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - id
      - email
      - password
  OUTJoinActivate:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      profile:
        type: object
      token:
        type: string
      extra:
        type: object
  INSignin:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
  OUTSignin:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      profile:
        type: object
      token:
        type: string
  INResetPassword:
    type: object
    properties:
      email:
        type: string
      lang:
        type: string
    required:
      - email
  INNewPassword:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - id
      - email
      - password
  OUTNewPassword:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      profile:
        type: object
      token:
        type: string
  INAccount:
    type: object
    properties:
      name:
        type: string
  OUTAccount:
    type: object
    properties:
      name:
        type: string
  INDeleteAccount:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
  INProfile:
    type: object
    properties:
      data:
        type: object
    required:
      - data
  OUTProfile:
    type: object
    properties:
      data:
        type: object
    required:
      - data
  INPassword:
    type: object
    properties:
      password:
        type: string
      newPassword:
        type: string
    required:
      - password
      - newPassword
  OUTDebugGetPending:
    type: object
    properties:
      pending:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
            data:
              type: object
