swagger: "2.0"
info:
  contact:
    name: Kari Kangas (karijkangas@gmail.com)
  description: ""
  license:
    name: MIT
  title: Gotagsavaruus REST API
  version: 0.0.1
host: localhost.com:8000
basePath: /api
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
paths:
  /join/check:
    post:
      description: |
        Check account availability. Account is available if there is no existing user registered
        with a given email address.
      parameters:
        - description: Join check data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/JoinCheck"
      produces:
        - application/json
      responses:
        "200":
          description: Account available
          schema:
            $ref: "#/definitions/JoinCheck"
        "400":
          description: Invalid data
        "409":
          description: Account not available
  /join/:
    post:
      description: |
        Create a join request. Sends an email with a link to verify account. Join requests are
        purged from the database after 1 day.
      parameters:
        - description: Join data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/Join"
      produces:
        - application/json
      responses:
        "201":
          description: Join request accepted
        "400":
          description: Invalid data
        "409":
          description: Account not available
  /join/activate:
    post:
      description: |
        Activate pending join request. Creates a user account matching the pending join request
        data and removes the pending join request from the database. Given email and password
        must match the email and password in the pending join request data. Returns a session
        token.
      parameters:
        - description: Join verify data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/JoinActivate"
      produces:
        - application/json
      responses:
        "200":
          description: Join token data
          schema:
            $ref: "#/definitions/JoinToken"
        "400":
          description: Invalid data
        "401":
          description: Invalid credentials
        "404":
          description: Join request not found
  /signin/:
    post:
      description: |
        Signin with email and password.
      parameters:
        - description: Signin data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/Signin"
      produces:
        - application/json
      responses:
        "200":
          description: Token
          schema:
            $ref: "#/definitions/Token"
        "400":
          description: Invalid data
        "401":
          description: Invalid credentials
  /reset-password/:
    post:
      description: |
        Create a reset password request. Sends an email with a link to reset password. Reset password
        requests are purged from the database after 1 day.
      parameters:
        - description: Reset password data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/ResetPassword"
      produces:
        - application/json
      responses:
        "201":
          description: Reset password request accepted
        "400":
          description: Invalid data
        "404":
          description: Unknown email
  /reset-password/new:
    post:
      description: |
        Sets new password and removes the reset password request from the database. Given email
        must match the email in the pending reset password request data. Returns a session
        token.
      parameters:
        - description: New password data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/NewPassword"
      produces:
        - application/json
      responses:
        "200":
          description: Token.
          schema:
            $ref: "#/definitions/Token"
        "401":
          description: Email does not match the email in the request
        "404":
          description: Password reset request not found
        "410":
          description: User matching email not found
  /auth/account/:
    get:
      description: |
        Get account data.
      produces:
        - application/json
      responses:
        "200":
          description: Account data
          schema:
            $ref: "#/definitions/Account"
        "401":
          description: Invalid token
        "410":
          description: Failed, use gone?
    put:
      description: |
        Update account data.
      parameters:
        - description: Update account data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/Account"
      produces:
        - application/json
      responses:
        "200":
          description: Account data updated
          schema:
            $ref: "#/definitions/Account"
        "400":
          description: Invalid data
        "401":
          description: Invalid token
        "410":
          description: Failed, use gone?
    delete:
      description: |
        Delete account.
      parameters:
        - description: Delete account data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/DeleteAccount"
      produces:
        - application/json
      responses:
        "200":
          description: Account deleted
        "400":
          description: Invalid password
        "401":
          description: Invalid token
        "409":
          description: Incorrect password
        "410":
          description: Failed, use gone?
  /auth/profile/:
    get:
      description: |
        Get profile data.
      produces:
        - application/json
      responses:
        "200":
          description: Account data
          schema:
            $ref: "#/definitions/Profile"
        "401":
          description: Invalid token
        "410":
          description: Failed, use gone?
    put:
      description: |
        Update profile data.
      parameters:
        - description: Update profile data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/Profile"
      produces:
        - application/json
      responses:
        "200":
          description: Profile data updated
          schema:
            $ref: "#/definitions/Profile"
        "400":
          description: Invalid data
        "401":
          description: Invalid token
        "410":
          description: Failed, use gone?
  /auth/password:
    post:
      description: |
        Update password.
      parameters:
        - description: Update password data
          in: body
          name: data
          required: true
          schema:
            $ref: "#/definitions/Password"
      produces:
        - application/json
      responses:
        "204":
          description: Password changed
        "400":
          description: Invalid data
        "401":
          description: Invalid token
        "409":
          description: Incorrect password
        "410":
          description: Failed, use gone?
  /debug/reset:
    post:
      description: |
        DEBUG API: reset database
      produces:
        - application/json
      responses:
        "200":
          description: Database reset
  /debug/pending:
    get:
      description: |
        DEBUG API: get pending
      produces:
        - application/json
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Category
      responses:
        "200":
          description: Pending
          schema:
            $ref: "#/definitions/DebugGetPending"
definitions:
  JoinCheck:
    type: object
    properties:
      email:
        type: string
    required:
      - email
  Join:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
      lang:
        type: string
      extra:
        type: object
    required:
      - name
      - email
      - password
  JoinActivate:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - id
      - email
      - password
  Signin:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
  JoinToken:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      token:
        type: string
      extra:
        type: object
  Token:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      token:
        type: string
  ResetPassword:
    type: object
    properties:
      email:
        type: string
      lang:
        type: string
    required:
      - email
  NewPassword:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - id
      - email
      - password
  Account:
    type: object
    properties:
      name:
        type: string
  Profile:
    type: object
  Password:
    type: object
    properties:
      password:
        type: string
      newPassword:
        type: string
    required:
      - password
      - newPassword
  DeleteAccount:
    type: object
    properties:
      password:
        type: string
    required:
      - password
  DebugGetPending:
    type: object
    properties:
      pending:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
            data:
              type: object
